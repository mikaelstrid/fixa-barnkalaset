{"version":3,"sources":["node_modules/browser-pack/_prelude.js","app/scripts/admin/main.ts","app/scripts/admin/pages/createArrangementPage.ts","app/scripts/admin/pages/createBlogPostPage.ts","app/scripts/admin/pages/createCityPage.ts","app/scripts/admin/pages/createOrEditArrangementPageBase.ts","app/scripts/admin/pages/createOrEditCityPageBase.ts","app/scripts/admin/pages/editArrangementPage.ts","app/scripts/admin/pages/editBlogPostPage.ts","app/scripts/admin/pages/editCityPage.ts","app/scripts/admin/utilities/constants.ts","app/scripts/admin/utilities/googleMapsUtilities.ts","app/scripts/admin/utilities/slugify.ts","app/scripts/public/main.ts","app/scripts/public/pages/detailsArrangementPage.ts","app/scripts/public/pages/indexArrangementsPage.ts"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length","1","module","bootstrap","console","log","$","createCityPage_1","CreateCityPage","initPage","editCityPage","editCityPage_1","EditCityPage","data","createArrangementPage_1","CreateArrangementPage","editArrangementPage","editArrangementPage_1","EditArrangementPage","createBlogPostPage_1","CreateBlogPostPage","editBlogPostPage_1","EditBlogPostPage","document","ready","createOrEditArrangementPageBase_1","slugify_1","_createOrEditArrangem","CreateOrEditArrangementPageBase","change","val","slugify","this","toString","dropdown","CKEDITOR","replace","initMap","createOrEditCityPageBase_1","_createOrEditCityPage","CreateOrEditCityPageBase","constants_1","googleMapsUtilities_1","mapElement","geocoder","google","maps","Geocoder","map","Map","zoom","center","lat","lng","placesService","places","PlacesService","initialLatitude","initialLongitude","updateMap","LatLng","click","lookupAddress","_this","getLookupAddress","geocode","address","results","status","GeocoderStatus","OK","geometry","location","updateLatLngTextboxes","name","textSearch","query","PlacesServiceStatus","getDetails","placeId","place_id","place","detailedStatus","updateInformationFromGooglePlaces","url","attr","updateImageList","updateStreetAddress","address_components","updateAddressComponent","formatted_phone_number","website","text","get","slug","setCoverImage","listElementInDom","addClass","empty","photos","removeClass","_iteratorNormalCompletion","_step","_iterator","Symbol","iterator","next","done","photo","value","append","getUrl","maxWidth","maxHeight","makeAttributionsHtmlList","html_attributions","popup","_this2","updateCoverImageUrl","currentTarget","updateCoverImageAttributions","attributions","_step2","_iterator2","_iteratorNormalCompletion2","substring","addressComponents","googleName","fieldId","GoogleMapsUtilties","getAddressComponent","streetAddress","route","streetNumber","result","marker","setPosition","Marker","position","draggable","addListener","ev","_this3","latLng","setZoom","setCenter","toLocaleString","Constants","locale","maximumFractionDigits","latitude","longitude","componentName","addressComponent","j","types","long_name","p","RegExp","split","join","toLowerCase","c","charAt","indexOf","indexArrangementsPage_1","IndexArrangementsPage","detailsArrangementPage_1","DetailsArrangementPage","event","ga","eventCategory","eventAction","eventLabel","transport","selectedTypes","show","each","visible","toggle","window"],"mappings":"CAAA,SAAAA,EAAAC,EAAAC,EAAAC,GAAA,SAAAC,EAAAC,EAAAC,GAAA,IAAAJ,EAAAG,GAAA,CAAA,IAAAJ,EAAAI,GAAA,CAAA,IAAAE,EAAA,mBAAAC,SAAAA,QAAA,IAAAF,GAAAC,EAAA,OAAAA,EAAAF,GAAA,GAAA,GAAAI,EAAA,OAAAA,EAAAJ,GAAA,GAAA,IAAAK,EAAA,IAAAC,MAAA,uBAAAN,EAAA,KAAA,MAAAK,EAAAE,KAAA,mBAAAF,EAAA,IAAAG,EAAAX,EAAAG,IAAAS,YAAAb,EAAAI,GAAA,GAAAU,KAAAF,EAAAC,QAAA,SAAAd,GAAA,IAAAE,EAAAD,EAAAI,GAAA,GAAAL,GAAA,OAAAI,EAAAF,GAAAF,IAAAa,EAAAA,EAAAC,QAAAd,EAAAC,EAAAC,EAAAC,GAAA,OAAAD,EAAAG,GAAAS,QAAA,IAAA,IAAAL,EAAA,mBAAAD,SAAAA,QAAAH,EAAA,EAAAA,EAAAF,EAAAa,OAAAX,IAAAD,EAAAD,EAAAE,IAAA,OAAAD,EAAA,EAAAa,GAAA,SAAAT,EAAAU,EAAAJ,gBCWA,SAAAK,IACIC,QAAQC,IAAI,6CAERC,EAAE,kCAAkCN,OAAS,IAC7CI,QAAQC,IAAI,wDACD,IAAIE,EAAcC,gBACxBC,WACLL,QAAQC,IAAI,+CAGhB,IAAIK,EAAeJ,EAAE,gCACjBI,EAAaV,OAAS,IACtBI,QAAQC,IAAI,sDACD,IAAIM,EAAYC,cACtBH,SAASC,EAAaG,KAAK,YAAaH,EAAaG,KAAK,cAC/DT,QAAQC,IAAI,6CAGZC,EAAE,wCAAwCN,OAAS,IACnDI,QAAQC,IAAI,+DACD,IAAIS,EAAqBC,uBAC/BN,WACLL,QAAQC,IAAI,sDAGhB,IAAIW,EAAsBV,EAAE,sCACxBU,EAAoBhB,OAAS,IAC7BI,QAAQC,IAAI,6DACD,IAAIY,EAAmBC,qBAC7BT,SAASO,EAAoBH,KAAK,YAAaG,EAAoBH,KAAK,cAC7ET,QAAQC,IAAI,oDAGZC,EAAE,sCAAsCN,OAAS,IACjDI,QAAQC,IAAI,6DACD,IAAIc,EAAkBC,oBAC5BX,WACLL,QAAQC,IAAI,oDAGOC,EAAE,oCACJN,OAAS,IAC1BI,QAAQC,IAAI,2DACD,IAAIgB,EAAgBC,kBAC1Bb,WACLL,QAAQC,IAAI,kDAGhBD,QAAQC,IAAI,4FA3Df,IAAAE,EAAAf,EAAwD,0BACzDmB,EAAAnB,EAAoD,wBACpDsB,EAAAtB,EAAsE,iCACtEyB,EAAAzB,EAAkE,+BAClE2B,EAAA3B,EAAgE,8BAChE6B,EAAA7B,EAA4D,4BAE5Dc,EAAEiB,UAAUC,MAAM,WACdrB,kkCCRH,IAAAsB,EAAAjC,EAAoF,qCACrFkC,EAAAlC,EAA+C,wBAEZuB,EAAA,SAAAY,kHAAQF,EAA+BG,uEAElEtB,EAAE,SAASuB,OAAO,WACdvB,EAAE,SAASwB,IAAIJ,EAAOK,QAACzB,EAAE0B,MAAMF,MAAMG,eAEzC3B,EAAE,mBAAmB4B,WACrBC,SAASC,QAAQ,eACjBD,SAASC,QAAQ,qBACjBD,SAASC,QAAQ,oBAEjBJ,KAAKK,gBAVsB,GAAnCvC,EAAAiB,sBAYCA,8eCfA,IAAAW,EAAAlC,EAA+C,wBAG5C4B,EAAA,+EACId,EAAE,UAAUuB,OAAO,WACfvB,EAAE,SAASwB,IAAIJ,EAAOK,QAACzB,EAAE0B,MAAMF,MAAMG,eAEzCE,SAASC,QAAQ,cAJrB,GADJtC,EAAAsB,mBAOCA,s6BCTA,IAAAkB,EAAA9C,EAAsE,8BACvEkC,EAAAlC,EAA+C,wBAEnBgB,EAAA,SAAA+B,kHAAQD,EAAwBE,gEAEpDpC,QAAQC,IAAI,2BACZC,EAAE,SAASuB,OAAO,WACdvB,EAAE,SAASwB,IAAIJ,EAAOK,QAACzB,EAAE0B,MAAMF,MAAMG,eAGzCD,KAAKK,gBAPe,GAA5BvC,EAAAU,eASCA,ueCZA,IAAAiC,EAAAjD,EAAmD,0BACpDkD,EAAAlD,EAAsE,oCAcxDoC,EAAA,yFACNI,KAAKW,WAAarC,EAAE,QAAQ,GAC5B0B,KAAKY,SAAW,IAAIC,OAAOC,KAAKC,SAChCf,KAAKgB,IAAA,IAAUH,OAAOC,KAAKG,IAAIjB,KAAKW,YAChCO,KAAM,EACNC,QAAUC,IAAK,GAAMC,IAAK,MAE9BrB,KAAKsB,cAAgB,IAAIT,OAAOC,KAAKS,OAAOC,cAAcxB,KAAKgB,KAE3DhB,KAAKyB,iBAAmBzB,KAAK0B,kBAC7B1B,KAAK2B,UAAU,IAAId,OAAOC,KAAKc,OAAO5B,KAAKyB,gBAAiBzB,KAAK0B,mBAGrEpD,EAAE,iCAAiCuD,MAAM,WACrC,IAAMC,EAAgBC,EAAKC,mBAS3B,OARAD,EAAKnB,SAASqB,SAAUC,QAAWJ,GAAiB,SAACK,EAASC,GACtDA,IAAWvB,OAAOC,KAAKuB,eAAeC,IACtCP,EAAKJ,UAAUQ,EAAQ,GAAGI,SAASC,UACnCT,EAAKU,sBAAsBN,EAAQ,GAAGI,SAASC,WAE/CpE,QAAQC,IAAA,iCAAqC+D,MAG9C,IAGX9D,EAAE,sCAAsCuD,MAAM,WAC1C,IAAMa,EAAOpE,EAAE,SAASwB,MAAMG,WAC9B,QAAKyC,IACLX,EAAKT,cAAcqB,YAAaC,MAAOF,GACnC,SAACP,EAASC,GACN,GAAIA,IAAWvB,OAAOC,KAAKS,OAAOsB,oBAAoBP,GAAI,CACtDlE,QAAQC,IAAA,iBAAoBqE,EAAA,QAC5B,IAAK,IAAIjF,EAAI,EAAGA,EAAI0E,EAAQnE,OAAQP,IAChCW,QAAQC,IAAA,KAAS8D,EAAQ1E,GAAGiF,MAEhCX,EAAKT,cAAcwB,YAAaC,QAASZ,EAAQ,GAAGa,UAChD,SAACC,EAAOC,GACAA,IAAmBrC,OAAOC,KAAKS,OAAOsB,oBAAoBP,GAC1DP,EAAKoB,kCAAkCF,GAEvC7E,QAAQC,IAAA,qCAAwC8D,EAAQ,GAAGa,SAAA,SAAiBE,EAAA,YAIxF9E,QAAQC,IAAA,sBAAyBqE,EAAA,SAAaN,EAAA,QAGnD,KAGX9D,EAAE,sBAAsBuD,MAAM,WAC1B,IAAIuB,EAAM9E,EAAE,eAAewB,MAAMG,WAGjC,OAFImD,GACA9E,EAAE,OAAO+E,KAAK,OAAQD,GAAKC,KAAK,SAAU,UAAU,GAAGxB,SACpD,IAGXvD,EAAE,iCAAiCuD,MAAM,WACrC,IAAIkB,EAAUzE,EAAE,mBAAmBwB,MACnC,OAAKiD,GAKLhB,EAAKT,cAAcwB,YAAaC,QAASA,EAAQ9C,YAC7C,SAACgD,EAAOC,GACAA,IAAmBrC,OAAOC,KAAKS,OAAOsB,oBAAoBP,GAC1DP,EAAKuB,gBAAgBL,GAAO,GAE5B7E,QAAQC,IAAA,qCAAwC0E,EAAA,SAAgBG,EAAA,QAIrE,IAbH9E,QAAQC,IAAI,kCACL,KAefC,EAAE,mBAAmBuD,MAAM,WAEvB,OADAvD,EAAE,OAAO+E,KAAK,OAAQ/E,EAAE,YAAYwB,MAAMG,YAAYoD,KAAK,SAAU,UAAU,GAAGxB,SAC3E,8DAI2BoB,GACtC3E,EAAE,mBAAmBwB,IAAImD,EAAMD,UAC/BhD,KAAKsD,gBAAgBL,GAAO,GAC5BjD,KAAKuD,oBAAoBN,EAAMO,mBAAoB,iBACnDxD,KAAKyD,uBAAuBR,EAAMO,mBAAoB,cAAe,cACrExD,KAAKyD,uBAAuBR,EAAMO,mBAAoB,cAAe,cACrExD,KAAKyD,uBAAuBR,EAAMO,mBAAoB,iBAAkB,iBAExElF,EAAE,gBAAgBwB,IAAImD,EAAMS,wBAC5BpF,EAAE,YAAYwB,IAAImD,EAAMU,QAAQvD,QAAQ,OAAQ,KAE5C6C,EAAMV,UAAYU,EAAMV,SAASC,WACjCxC,KAAKyC,sBAAsBQ,EAAMV,SAASC,UAC1CxC,KAAK2B,UAAUsB,EAAMV,SAASC,WAGlClE,EAAE,qBAAqBsF,KAAKX,EAAMP,MAElCpE,EAAEuF,IAAA,gCAAoCZ,EAAMV,SAASC,SAASpB,MAAA,cAAmB6B,EAAMV,SAASC,SAASnB,MACrG,SAAUxC,GACNP,EAAE,aAAawB,IAAIjB,EAAKiF,gDAIZb,EAAuCc,cACvDC,EAAmB1F,EAAE,8BAIzB,GAHA0F,EAAiBC,SAAS,UAC1BD,EAAiBE,QAEbjB,EAAMkB,OAAOnG,OAAS,EAAA,CACtBgG,EAAiBI,YAAY,UADJ,IAAAC,GAAA,oBAEzB,IAAA,IAAwBC,EAAxBC,EAAkBtB,EAAMkB,OAAAK,OAAAC,cAAAJ,GAAAC,EAAAC,EAAAG,QAAAC,MAAAN,GAAA,EAAA,CAAQ,IAAvBO,EAAAN,EAAAO,MACLb,EAAiBc,OAAA,8EAEAF,EAAMG,QAASC,SAAU,MAAA,UAAkBJ,EAAMG,QAASC,SAAU,IAAKC,UAAW,MAAA,qCACnFjF,KAAKkF,yBAAyBN,EAAMO,mBAAA,sGAG1D7G,EAAE,qCAAqC8G,QACvC9G,EAAE,qCAAqCuD,MAAM,SAAC7E,GAG1C,OAFAqI,EAAKC,oBAAoBhH,EAAEtB,EAAEuI,eAAe1G,KAAK,QACjDwG,EAAKG,6BAA6BlH,EAAEtB,EAAEuI,eAAe1G,KAAK,UACnD,IAEPkF,IACA/D,KAAKsF,oBAAoBrC,EAAMkB,OAAO,GAAGY,QAASC,SAAU,OAC5DhF,KAAKwF,6BAA6BxF,KAAKkF,yBAAyBjC,EAAMkB,OAAO,GAAGgB,uEAK3DA,GAC7B,IAAIM,EAAe,0BACnB,IAAA,IAAmBC,EAAnBC,EAAmBR,EAAAX,OAAAC,cAAAmB,GAAAF,EAAAC,EAAAjB,QAAAC,MAAAiB,GAAA,EACfH,GADKC,EAAAb,MACc,kFAIvB,OAFIY,EAAazH,QAAU,IACvByH,EAAeA,EAAaI,UAAU,EAAGJ,EAAazH,OAAS,IAC5DyH,EAAarF,QAAQ,KAAM,iDAGVgD,GACxB9E,EAAE,eAAewB,IAAIsD,wDAGYqC,GACjCnH,EAAE,2BAA2BwB,IAAI2F,kDAGNK,EAA2DC,EAAoBC,GAC1G,IAAMnB,EAAQnE,EAAkBuF,mBAACC,oBAAoBJ,EAAmBC,GACpElB,GACAvG,EAAA,IAAM0H,GAAWlG,IAAI+E,+CAIDiB,EAA2DE,GACnF,IAAMG,EAAgBzF,EAAkBuF,mBAACC,oBAAoBJ,EAAmB,kBAC1EM,EAAQ1F,EAAkBuF,mBAACC,oBAAoBJ,EAAmB,SAClEO,EAAe3F,EAAkBuF,mBAACC,oBAAoBJ,EAAmB,iBAE3EQ,EAASH,GAAgCC,EACzCC,IACAC,EAASA,EAAS,IAAMD,GAE5B/H,EAAA,IAAM0H,GAAWlG,IAAIwG,8CAQrB,OAJsBhI,EAAE,kBAAkBwB,MAGjB,KAFNxB,EAAE,eAAewB,MAEO,IADxBxB,EAAE,eAAewB,wCAKtB0C,cACVxC,KAAKuG,OACLvG,KAAKuG,OAAOC,YAAYhE,IAExBxC,KAAKuG,OAAA,IAAa1F,OAAOC,KAAK2F,QAC1BzF,IAAKhB,KAAKgB,IACV0F,SAAUlE,EACVmE,WAAW,IAEf3G,KAAKuG,OAAOK,YAAY,UAAW,SAAAC,GAC/BC,EAAKrE,sBAAsBoE,EAAGE,UAElC/G,KAAKgB,IAAIgG,QAAQ,KAErBhH,KAAKgB,IAAIiG,UAAUzE,iDAGOA,GAC1BlE,EAAE,aAAawB,IAAI0C,EAASpB,MAAM8F,eAAezG,EAAS0G,UAACC,QAAUC,sBAAuB,MAC5F/I,EAAE,cAAcwB,IAAI0C,EAASnB,MAAM6F,eAAezG,EAAS0G,UAACC,QAAUC,sBAAuB,YAtMvF,GAZdvJ,EAAA8B,gCAoNCA,gfCvNA,IAAAa,EAAAjD,EAAmD,0BAatCgD,EAAA,yFACNR,KAAKW,WAAarC,EAAE,QAAQ,GAC5B0B,KAAKY,SAAW,IAAIC,OAAOC,KAAKC,SAChCf,KAAKgB,IAAA,IAAUH,OAAOC,KAAKG,IAAIjB,KAAKW,YAChCO,KAAM,EACNC,QAAUC,IAAK,GAAMC,IAAK,MAG1BrB,KAAKyB,iBAAmBzB,KAAK0B,kBAC7B1B,KAAK2B,UAAU,IAAId,OAAOC,KAAKc,OAAO5B,KAAKyB,gBAAiBzB,KAAK0B,mBAGrEpD,EAAE,8BAA8BuD,MAAM,WAClC,IAAMC,EAAgBC,EAAKC,mBAS3B,OARAD,EAAKnB,SAASqB,SAAUC,QAAWJ,GAAiB,SAACK,EAASC,GACtDA,IAAWvB,OAAOC,KAAKuB,eAAeC,IACtCP,EAAKJ,UAAUQ,EAAQ,GAAGI,SAASC,UACnCT,EAAKU,sBAAsBN,EAAQ,GAAGI,SAASC,WAE/CpE,QAAQC,IAAA,iCAAqC+D,MAG9C,+CAKX,OAAO9D,EAAE,SAASwB,MAAMG,6CAGVuC,cACVxC,KAAKuG,OACLvG,KAAKuG,OAAOC,YAAYhE,IAExBxC,KAAKuG,OAAA,IAAa1F,OAAOC,KAAK2F,QAC1BzF,IAAKhB,KAAKgB,IACV0F,SAAUlE,EACVmE,WAAW,IAEf3G,KAAKuG,OAAOK,YAAY,UAAW,SAAAC,GAC/BxB,EAAK5C,sBAAsBoE,EAAGE,UAElC/G,KAAKgB,IAAIgG,QAAQ,KAErBhH,KAAKgB,IAAIiG,UAAUzE,iDAGOA,GAC1BlE,EAAE,aAAawB,IAAI0C,EAASpB,MAAM8F,eAAezG,EAAS0G,UAACC,QAAUC,sBAAuB,MAC5F/I,EAAE,cAAcwB,IAAI0C,EAASnB,MAAM6F,eAAezG,EAAS0G,UAACC,QAAUC,sBAAuB,YAjDvF,GAXdvJ,EAAA0C,yBA8DCA,w6BChEA,IAAAf,EAAAjC,EAAoF,qCAGpD0B,EAAA,SAAAS,kHAAQF,EAA+BG,qEAC3D0H,EAAkBC,GACvBjJ,EAAE,mBAAmB4B,WACrBC,SAASC,QAAQ,eACjBD,SAASC,QAAQ,qBACjBD,SAASC,QAAQ,oBACjBJ,KAAKyB,gBAAkB6F,EACvBtH,KAAK0B,iBAAmB6F,EACxBvH,KAAKK,gBARoB,GAAjCvC,EAAAoB,oBAUCA,gdCbA,QACGI,EAAA,wFACac,QAAQ,cADrB,GADHtC,EAAAwB,iBAIAA,64BCJA,IAAAgB,EAAA9C,EAAsE,8BAG7CoB,EAAA,SAAA2B,kHAAQD,EAAwBE,8DAC7C8G,EAAkBC,GACvBnJ,QAAQC,IAAI,wBAAyBiJ,EAAUC,GAC/CvH,KAAKyB,gBAAkB6F,EACvBtH,KAAK0B,iBAAmB6F,EACxBvH,KAAKK,gBALa,GAA1BvC,EAAAc,aAOCA,iNCVA,kCACUuI,EAAMC,OAAG,KADnBtJ,EAAAqJ,UAEAA,4aCFA,QACGlB,EAAA,6FAA2BH,EAA2D0B,GAClF,IAAK,IAAI/J,EAAI,EAAGA,EAAIqI,EAAkB9H,OAAQP,IAE1C,IAAK,IADCgK,EAAmB3B,EAAkBrI,GAClCiK,EAAI,EAAGA,EAAID,EAAiBE,MAAM3J,OAAQ0J,IAC/C,GAAID,EAAiBE,MAAMD,KAAOF,EAC9B,OAAOC,EAAiBG,gBALxC,GADH9J,EAAAmI,mBAYAA,yFCVDnI,EAAAiC,QAAA,SAAwB6D,GACpB,IAAMrG,EAAI,gDAEJsK,EAAI,IAAIC,OAAOvK,EAAEwK,MAAM,IAAIC,KAAK,KAAM,KAE5C,OAAApE,EAAY3D,WAAWgI,cAClB7H,QAAQ,OAAQ,KAChBA,QAAQyH,EAAA,SAAAK,GACL,MANE,gDAOAC,OAAO5K,EAAE6K,QAAQF,MACtB9H,QAAQ,KAAM,SACdA,QAAQ,YAAa,IACrBA,QAAQ,SAAU,KAClBA,QAAQ,MAAO,IACfA,QAAQ,MAAO,2CCTxB,SAAAjC,IACIC,QAAQC,IAAI,8CAERC,EAAE,wCAAwCN,OAAS,IACnDI,QAAQC,IAAI,+DACD,IAAIgK,EAAqBC,uBAC/B7J,WACLL,QAAQC,IAAI,sDAGZC,EAAE,0CAA0CN,OAAS,IACrDI,QAAQC,IAAI,gEACD,IAAIkK,EAAsBC,wBAChC/J,WACLL,QAAQC,IAAI,uDAGhBD,QAAQC,IAAI,6FAxBf,IAAAgK,EAAA7K,EAAsE,iCACvE+K,EAAA/K,EAAwE,kCAExEc,EAAEiB,UAAUC,MAAM,WACdrB,sfCJH,QACGqK,EAAA,+EACIpK,QAAQC,IAAI,mCAEZC,EAAE,qBAAqBuD,MAAM,SAAU4G,GACnCC,GAAG,OAAQ,SACPC,cAAe,UACfC,YAAa,OACbC,WAAYvK,EAAE0B,MAAMqD,KAAK,QACzByF,UAAW,aAInBxK,EAAE,wBAAwBuD,MAAM,SAAU4G,GACtCC,GAAG,OAAQ,SACPC,cAAe,gBACfC,YAAa,QACbC,WAAYvK,EAAE0B,MAAMqD,KAAK,QACzByF,UAAW,mBAjBvB,GADHhL,EAAA0K,uBAsBAA,4aCtBA,QACGF,EAAA,+EACIlK,QAAQC,IAAI,kCACZC,EAAE,qBAAqBuB,OAAO,SAAUgH,GACpC,IAAIkC,EAAgBzK,EAAE0B,MAAMF,MACA,GAAxBiJ,EAAc/K,OACdM,EAAE,oBAAoB0K,OAEtB1K,EAAE,oBAAoB2K,KAAK,WAEvB,IAAK,IADDC,GAAU,EACLzL,EAAI,GAAIyL,GAAWzL,EAAIsL,EAAc/K,OAAQP,IAC9Ca,EAAE0B,MAAMnB,KAAK,UAAYkK,EAActL,KACvCyL,GAAU,GAGlB5K,EAAE0B,MAAMmJ,OAAOD,KAGvB5K,EAAE0B,MAAME,SAAS,QACjB5B,EAAE,qBAAqBsF,KAAKtF,EAAE,4BAA4BN,QAEhDoL,OAAQV,IACdA,GAAG,OAAQ,SACPC,cAAe,SACfC,YAAa,aACbC,WAAYE,EAAc9I,WAC1B6I,UAAW,mBAzB3B,GADHhL,EAAAwK,sBA+BAA","file":"bundle.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","﻿import { CreateCityPage } from \"./pages/createCityPage\";\r\nimport { EditCityPage } from \"./pages/editCityPage\";\r\nimport { CreateArrangementPage } from \"./pages/createArrangementPage\";\r\nimport { EditArrangementPage } from \"./pages/editArrangementPage\";\r\nimport { CreateBlogPostPage } from \"./pages/createBlogPostPage\";\r\nimport { EditBlogPostPage } from \"./pages/editBlogPostPage\";\r\n\r\n$(document).ready(() => {\r\n    bootstrap();\r\n});\r\n\r\nfunction bootstrap() {\r\n    console.log(\"Starting admin bootstrapping procedure...\");\r\n\r\n    if ($(\".pxl-admin-page--cities-create\").length > 0) {\r\n        console.log(\"Found \\\"create city page\\\", start bootstrapping it...\");\r\n        let page = new CreateCityPage();\r\n        page.initPage();\r\n        console.log(\"Bootstrapping \\\"create city page\\\" finished.\");\r\n    }\r\n\r\n    let editCityPage = $(\".pxl-admin-page--cities-edit\");\r\n    if (editCityPage.length > 0) {\r\n        console.log(\"Found \\\"edit city page\\\", start bootstrapping it...\");\r\n        let page = new EditCityPage();\r\n        page.initPage(editCityPage.data(\"latitude\"), editCityPage.data(\"longitude\"));\r\n        console.log(\"Bootstrapping \\\"edit city page\\\" finished.\");\r\n    }\r\n\r\n    if ($(\".pxl-admin-page--arrangements-create\").length > 0) {\r\n        console.log(\"Found \\\"create arrangement page\\\", start bootstrapping it...\");\r\n        let page = new CreateArrangementPage();\r\n        page.initPage();\r\n        console.log(\"Bootstrapping \\\"create arrangement page\\\" finished.\");\r\n    }\r\n\r\n    let editArrangementPage = $(\".pxl-admin-page--arrangements-edit\");\r\n    if (editArrangementPage.length > 0) {\r\n        console.log(\"Found \\\"edit arrangement page\\\", start bootstrapping it...\");\r\n        let page = new EditArrangementPage();\r\n        page.initPage(editArrangementPage.data(\"latitude\"), editArrangementPage.data(\"longitude\"));\r\n        console.log(\"Bootstrapping \\\"edit arrangement page\\\" finished.\");\r\n    }\r\n\r\n    if ($(\".pxl-admin-page--blog-posts-create\").length > 0) {\r\n        console.log(\"Found \\\"create blog post page\\\", start bootstrapping it...\");\r\n        let page = new CreateBlogPostPage();\r\n        page.initPage();\r\n        console.log(\"Bootstrapping \\\"create blog post page\\\" finished.\");\r\n    }\r\n\r\n    let editBlogPostPage = $(\".pxl-admin-page--blog-posts-edit\");\r\n    if (editBlogPostPage.length > 0) {\r\n        console.log(\"Found \\\"edit blog post page\\\", start bootstrapping it...\");\r\n        let page = new EditBlogPostPage();\r\n        page.initPage();\r\n        console.log(\"Bootstrapping \\\"edit blog post page\\\" finished.\");\r\n    }\r\n\r\n    console.log(\"Bootstrapping admin procedure finished.\");\r\n}","﻿import { CreateOrEditArrangementPageBase } from \"./createOrEditArrangementPageBase\";\r\nimport { slugify } from \"../utilities/slugify\";\r\n\r\nexport class CreateArrangementPage extends CreateOrEditArrangementPageBase {\r\n    initPage() {\r\n        $(\"#Name\").change(function () {\r\n            $(\"#Slug\").val(slugify($(this).val().toString()));\r\n        });\r\n        $(\"select.dropdown\").dropdown();\r\n        CKEDITOR.replace(\"Description\");\r\n        CKEDITOR.replace(\"BookingConditions\");\r\n        CKEDITOR.replace(\"PriceInformation\");\r\n\r\n        this.initMap();\r\n    }\r\n}","﻿import { slugify } from \"../utilities/slugify\";\r\n\r\nexport class CreateBlogPostPage {\r\n    initPage() {\r\n        $(\"#Title\").change(function () {\r\n            $(\"#Slug\").val(slugify($(this).val().toString()));\r\n        });\r\n        CKEDITOR.replace(\"Body\");\r\n    }\r\n}","﻿import { CreateOrEditCityPageBase } from \"./createOrEditCityPageBase\";\r\nimport { slugify } from \"../utilities/slugify\";\r\n\r\nexport class CreateCityPage extends CreateOrEditCityPageBase {\r\n    initPage() {\r\n        console.log(\"CreateCityPage.initPage\")\r\n        $(\"#Name\").change(function () {\r\n            $(\"#Slug\").val(slugify($(this).val().toString()));\r\n        });\r\n\r\n        this.initMap();\r\n    }\r\n}","﻿import { Constants } from \"../utilities/constants\";\r\nimport { GoogleMapsUtilties } from \"../utilities/googleMapsUtilities\";\r\n\r\nexport abstract class CreateOrEditArrangementPageBase {\r\n\r\n    private mapElement: HTMLElement;\r\n\r\n    private map: google.maps.Map;\r\n    private marker: google.maps.Marker;\r\n    private geocoder: google.maps.Geocoder;\r\n    private placesService: google.maps.places.PlacesService;\r\n\r\n    protected initialLatitude: number;\r\n    protected initialLongitude: number;\r\n\r\n    protected initMap() {\r\n        this.mapElement = $(\"#map\")[0];\r\n        this.geocoder = new google.maps.Geocoder();\r\n        this.map = new google.maps.Map(this.mapElement, {\r\n            zoom: 4,\r\n            center: { lat: 63.0, lng: 17.0 }\r\n        });\r\n        this.placesService = new google.maps.places.PlacesService(this.map);\r\n\r\n        if (this.initialLatitude && this.initialLongitude) {\r\n            this.updateMap(new google.maps.LatLng(this.initialLatitude, this.initialLongitude));\r\n        }\r\n\r\n        $(\"#btnGetCoordinatesFromAddress\").click(() => {\r\n            const lookupAddress = this.getLookupAddress();\r\n            this.geocoder.geocode({ 'address': lookupAddress }, (results, status) => {\r\n                if (status === google.maps.GeocoderStatus.OK) {\r\n                    this.updateMap(results[0].geometry.location);\r\n                    this.updateLatLngTextboxes(results[0].geometry.location);\r\n                } else {\r\n                    console.log(`Kunde inte hitta position pga ${status}`);\r\n                }\r\n            });\r\n            return false;\r\n        });\r\n\r\n        $(\"#btnGetInformationFromGooglePlaces\").click(() => {\r\n            const name = $(\"#Name\").val().toString();\r\n            if (!name) return false;\r\n            this.placesService.textSearch({ query: name },\r\n                (results, status) => {\r\n                    if (status === google.maps.places.PlacesServiceStatus.OK) {\r\n                        console.log(`\"Träffar på '${name}':\"`);\r\n                        for (let i = 0; i < results.length; i++) {\r\n                            console.log(`\\t${results[i].name}`);\r\n                        }\r\n                        this.placesService.getDetails({ placeId: results[0].place_id },\r\n                            (place, detailedStatus) => {\r\n                                if (detailedStatus === google.maps.places.PlacesServiceStatus.OK) {\r\n                                    this.updateInformationFromGooglePlaces(place);\r\n                                } else {\r\n                                    console.log(`\"Kunde inte hämta detailjer för '${results[0].place_id}' pga ${detailedStatus}\"`);\r\n                                }\r\n                            });\r\n                    } else {\r\n                        console.log(`\"Inga träffar på '${name}' pga ${status}\"`);\r\n                    }\r\n                });\r\n            return false;\r\n        });\r\n\r\n        $(\"#btnOpenCoverImage\").click(() => {\r\n            var url = $(\"#CoverImage\").val().toString();\r\n            if (url) \r\n                $(\"<a>\").attr(\"href\", url).attr(\"target\", \"_blank\")[0].click();\r\n            return false;\r\n        });\r\n\r\n        $(\"#btnGetImagesFromGooglePlaces\").click(() => {\r\n            var placeId = $(\"#GooglePlacesId\").val();\r\n            if (!placeId) {\r\n                console.log(\"No Google Places id specified\")\r\n                return false;\r\n            }\r\n\r\n            this.placesService.getDetails({ placeId: placeId.toString() },\r\n                (place, detailedStatus) => {\r\n                    if (detailedStatus === google.maps.places.PlacesServiceStatus.OK) {\r\n                        this.updateImageList(place, false);\r\n                    } else {\r\n                        console.log(`\"Kunde inte hämta detailjer för '${placeId}' pga ${detailedStatus}\"`);\r\n                    }\r\n                });\r\n\r\n            return false;\r\n        });\r\n\r\n        $(\"#btnOpenWebsite\").click(() => {\r\n            $(\"<a>\").attr(\"href\", $(\"#Website\").val().toString()).attr(\"target\", \"_blank\")[0].click();\r\n            return false;\r\n        });\r\n    }\r\n\r\n    private updateInformationFromGooglePlaces(place: google.maps.places.PlaceResult): void {\r\n        $(\"#GooglePlacesId\").val(place.place_id);\r\n        this.updateImageList(place, true);\r\n        this.updateStreetAddress(place.address_components, \"StreetAddress\");\r\n        this.updateAddressComponent(place.address_components, \"postal_code\", \"PostalCode\");\r\n        this.updateAddressComponent(place.address_components, \"postal_town\", \"PostalCity\");\r\n        this.updateAddressComponent(place.address_components, \"street_address\", \"StreetAddress\");\r\n\r\n        $(\"#PhoneNumber\").val(place.formatted_phone_number);\r\n        $(\"#Website\").val(place.website.replace(/\\/+$/, \"\"));\r\n\r\n        if (place.geometry && place.geometry.location) {\r\n            this.updateLatLngTextboxes(place.geometry.location);\r\n            this.updateMap(place.geometry.location);\r\n        }\r\n\r\n        $(\"#GooglePlacesName\").text(place.name);\r\n\r\n        $.get(`/api/cities/closest?latitude=${place.geometry.location.lat()}&longitude=${place.geometry.location.lng()}`,\r\n            function (data) {\r\n                $(\"#CitySlug\").val(data.slug);\r\n            });\r\n    }\r\n\r\n    private updateImageList(place: google.maps.places.PlaceResult, setCoverImage: boolean) {\r\n        let listElementInDom = $(\"#lstImagesFromGooglePlaces\");\r\n        listElementInDom.addClass(\"hidden\");\r\n        listElementInDom.empty();\r\n\r\n        if (place.photos.length > 0) {\r\n            listElementInDom.removeClass(\"hidden\");\r\n            for (let photo of place.photos) {\r\n                listElementInDom.append(`<img \r\n                    class=\\\"ui image\\\"\r\n                    data-url=\\\"${photo.getUrl({ maxWidth: 812 })}\\\" src=\\\"${photo.getUrl({ maxWidth: 600, maxHeight: 600 })}\\\"\r\n                    data-html=\\\"${this.makeAttributionsHtmlList(photo.html_attributions)}\\\"\r\n                >`);\r\n            }\r\n            $(\"#lstImagesFromGooglePlaces .image\").popup();\r\n            $(\"#lstImagesFromGooglePlaces .image\").click((e) => {\r\n                this.updateCoverImageUrl($(e.currentTarget).data(\"url\"));\r\n                this.updateCoverImageAttributions($(e.currentTarget).data(\"html\"))\r\n                return false;\r\n            });\r\n            if (setCoverImage) {\r\n                this.updateCoverImageUrl(place.photos[0].getUrl({ maxWidth: 812 }));\r\n                this.updateCoverImageAttributions(this.makeAttributionsHtmlList(place.photos[0].html_attributions));\r\n            }\r\n        }\r\n    }\r\n\r\n    private makeAttributionsHtmlList(html_attributions: string[]): string {\r\n        let attributions = \"\";\r\n        for (let attrib of html_attributions) {\r\n            attributions += `${attrib}, `;\r\n        }\r\n        if (attributions.length >= 2)\r\n            attributions = attributions.substring(0, attributions.length - 2);\r\n        return attributions.replace(/\"/g, \"'\");\r\n    }\r\n\r\n    private updateCoverImageUrl(url: string) {\r\n        $(\"#CoverImage\").val(url);\r\n    }\r\n\r\n    private updateCoverImageAttributions(attributions: string) {\r\n        $(\"#CoverImageAttributions\").val(attributions);\r\n    }\r\n\r\n    private updateAddressComponent(addressComponents: google.maps.GeocoderAddressComponent[], googleName: string, fieldId: string): void {\r\n        const value = GoogleMapsUtilties.getAddressComponent(addressComponents, googleName);\r\n        if (value) {\r\n            $(`#${fieldId}`).val(value);\r\n        }\r\n    }\r\n\r\n    private updateStreetAddress(addressComponents: google.maps.GeocoderAddressComponent[], fieldId: string): void {\r\n        const streetAddress = GoogleMapsUtilties.getAddressComponent(addressComponents, \"street_address\");\r\n        const route = GoogleMapsUtilties.getAddressComponent(addressComponents, \"route\");\r\n        const streetNumber = GoogleMapsUtilties.getAddressComponent(addressComponents, \"street_number\");\r\n\r\n        let result = streetAddress ? streetAddress : route;\r\n        if (streetNumber)\r\n            result = result + \" \" + streetNumber;\r\n\r\n        $(`#${fieldId}`).val(result);\r\n    }\r\n\r\n    private getLookupAddress(): string {\r\n        const streetAddress = $(\"#StreetAddress\").val();\r\n        const postalCode = $(\"#PostalCode\").val();\r\n        const postalCity = $(\"#PostalCity\").val();\r\n        const lookupAddress = `${streetAddress}, ${postalCode} ${postalCity}`;\r\n        return lookupAddress;\r\n    }\r\n\r\n    private updateMap(location: google.maps.LatLng): void {\r\n        if (this.marker) {\r\n            this.marker.setPosition(location);\r\n        } else {\r\n            this.marker = new google.maps.Marker({\r\n                map: this.map,\r\n                position: location,\r\n                draggable: true\r\n            });\r\n            this.marker.addListener(\"dragend\", ev => {\r\n                this.updateLatLngTextboxes(ev.latLng);\r\n            });\r\n            this.map.setZoom(11);\r\n        }\r\n        this.map.setCenter(location);\r\n    }\r\n\r\n    private updateLatLngTextboxes(location: google.maps.LatLng): void  {\r\n        $(\"#Latitude\").val(location.lat().toLocaleString(Constants.locale, { maximumFractionDigits: 14 }));\r\n        $(\"#Longitude\").val(location.lng().toLocaleString(Constants.locale, { maximumFractionDigits: 14 }));\r\n    }\r\n}","﻿import { Constants } from \"../utilities/constants\";\r\n\r\nexport abstract class CreateOrEditCityPageBase {\r\n\r\n    private mapElement: HTMLElement;\r\n\r\n    private map: google.maps.Map;\r\n    private marker: google.maps.Marker;\r\n    private geocoder: google.maps.Geocoder;\r\n\r\n    protected initialLatitude: number;\r\n    protected initialLongitude: number;\r\n\r\n    protected initMap() {\r\n        this.mapElement = $(\"#map\")[0];\r\n        this.geocoder = new google.maps.Geocoder();\r\n        this.map = new google.maps.Map(this.mapElement, {\r\n            zoom: 4,\r\n            center: { lat: 63.0, lng: 17.0 }\r\n        });\r\n\r\n        if (this.initialLatitude && this.initialLongitude) {\r\n            this.updateMap(new google.maps.LatLng(this.initialLatitude, this.initialLongitude));\r\n        }\r\n\r\n        $(\"#btnGetCoordinatesFromName\").click(() => {\r\n            const lookupAddress = this.getLookupAddress();\r\n            this.geocoder.geocode({ 'address': lookupAddress }, (results, status) => {\r\n                if (status === google.maps.GeocoderStatus.OK) {\r\n                    this.updateMap(results[0].geometry.location);\r\n                    this.updateLatLngTextboxes(results[0].geometry.location);\r\n                } else {\r\n                    console.log(`Kunde inte hitta position pga ${status}`);\r\n                }\r\n            });\r\n            return false;\r\n        });\r\n    }\r\n\r\n    private getLookupAddress(): string {\r\n        return $(\"#Name\").val().toString();\r\n    }\r\n\r\n    private updateMap(location: google.maps.LatLng): void {\r\n        if (this.marker) {\r\n            this.marker.setPosition(location);\r\n        } else {\r\n            this.marker = new google.maps.Marker({\r\n                map: this.map,\r\n                position: location,\r\n                draggable: true\r\n            });\r\n            this.marker.addListener(\"dragend\", ev => {\r\n                this.updateLatLngTextboxes(ev.latLng);\r\n            });\r\n            this.map.setZoom(11);\r\n        }\r\n        this.map.setCenter(location);\r\n    }\r\n\r\n    private updateLatLngTextboxes(location: google.maps.LatLng): void  {\r\n        $(\"#Latitude\").val(location.lat().toLocaleString(Constants.locale, { maximumFractionDigits: 14 }));\r\n        $(\"#Longitude\").val(location.lng().toLocaleString(Constants.locale, { maximumFractionDigits: 14 }));\r\n    }\r\n}","﻿import { CreateOrEditArrangementPageBase } from \"./createOrEditArrangementPageBase\";\r\nimport { slugify } from \"../utilities/slugify\";\r\n\r\nexport class EditArrangementPage extends CreateOrEditArrangementPageBase {\r\n    initPage(latitude: number, longitude: number) {\r\n        $(\"select.dropdown\").dropdown();\r\n        CKEDITOR.replace(\"Description\");\r\n        CKEDITOR.replace(\"BookingConditions\");\r\n        CKEDITOR.replace(\"PriceInformation\");\r\n        this.initialLatitude = latitude;\r\n        this.initialLongitude = longitude;\r\n        this.initMap();\r\n    }\r\n}","﻿export class EditBlogPostPage {\r\n    initPage() {\r\n        CKEDITOR.replace(\"Body\");\r\n    }\r\n}","﻿import { CreateOrEditCityPageBase } from \"./createOrEditCityPageBase\";\r\nimport { slugify } from \"../utilities/slugify\";\r\n\r\nexport class EditCityPage extends CreateOrEditCityPageBase {\r\n    initPage(latitude: number, longitude: number) {\r\n        console.log(\"EditCityPage.initPage\", latitude, longitude)\r\n        this.initialLatitude = latitude;\r\n        this.initialLongitude = longitude;\r\n        this.initMap();\r\n    }\r\n}","﻿export class Constants {\r\n    static locale = \"sv\";\r\n}","﻿export class GoogleMapsUtilties {\r\n    static getAddressComponent(addressComponents: google.maps.GeocoderAddressComponent[], componentName: string): string {\r\n        for (let i = 0; i < addressComponents.length; i++) {\r\n            const addressComponent = addressComponents[i];\r\n            for (let j = 0; j < addressComponent.types.length; j++) {\r\n                if (addressComponent.types[j] === componentName) {\r\n                    return addressComponent.long_name;\r\n                }\r\n            }\r\n        }\r\n        return undefined;\r\n    }\r\n}","﻿// https://gist.github.com/mathewbyrne/1280286\r\n\r\nexport function slugify(text: string) {\r\n    const a = \"àáåäâèéëêìíïîòóöôùúüûñçßÿœæŕśńṕẃǵǹḿǘẍźḧ·/_,:;\";\r\n    const b = \"aaaaaeeeeiiiioooouuuuncsyoarsnpwgnmuxzh------\";\r\n    const p = new RegExp(a.split(\"\").join(\"|\"), \"g\");\r\n\r\n    return text.toString().toLowerCase()\r\n        .replace(/\\s+/g, \"-\") // Replace spaces with -\r\n        .replace(p,\r\n            c =>\r\n            b.charAt(a.indexOf(c))) // Replace special chars\r\n        .replace(/&/g, \"-and-\")     // Replace & with 'and'\r\n        .replace(/[^\\w\\-]+/g, \"\")   // Remove all non-word chars\r\n        .replace(/\\-\\-+/g, \"-\")     // Replace multiple - with single -\r\n        .replace(/^-+/, \"\")         // Trim - from start of text\r\n        .replace(/-+$/, \"\");        // Trim - from end of text\r\n}","﻿import { IndexArrangementsPage } from \"./pages/indexArrangementsPage\";\r\nimport { DetailsArrangementPage } from \"./pages/detailsArrangementPage\";\r\n\r\n$(document).ready(() => {\r\n    bootstrap();\r\n});\r\n\r\nfunction bootstrap() {\r\n    console.log(\"Starting public bootstrapping procedure...\");\r\n\r\n    if ($(\".pxl-public-page--arrangements-index\").length > 0) {\r\n        console.log(\"Found \\\"index arrangements page\\\", start bootstrapping it...\");\r\n        let page = new IndexArrangementsPage();\r\n        page.initPage();\r\n        console.log(\"Bootstrapping \\\"index arrangements page\\\" finished.\");\r\n    }\r\n\r\n    if ($(\".pxl-public-page--arrangements-details\").length > 0) {\r\n        console.log(\"Found \\\"details arrangement page\\\", start bootstrapping it...\");\r\n        let page = new DetailsArrangementPage();\r\n        page.initPage();\r\n        console.log(\"Bootstrapping \\\"details arrangement page\\\" finished.\");\r\n    }\r\n\r\n    console.log(\"Bootstrapping public procedure finished.\");\r\n}","﻿export class DetailsArrangementPage {\r\n    initPage() {\r\n        console.log(\"DetailsArrangementPage.initPage\");\r\n\r\n        $(\"#emailAddressLink\").click(function (event) {\r\n            ga('send', 'event', {\r\n                eventCategory: 'Contact',\r\n                eventAction: 'mail',\r\n                eventLabel: $(this).attr(\"href\"),\r\n                transport: 'beacon'\r\n            });\r\n        });\r\n\r\n        $(\"#externalWebsiteLink\").click(function (event) {\r\n            ga('send', 'event', {\r\n                eventCategory: 'Outbound Link',\r\n                eventAction: 'click',\r\n                eventLabel: $(this).attr(\"href\"),\r\n                transport: 'beacon'\r\n            });\r\n        });\r\n    }\r\n}","﻿export class IndexArrangementsPage {\r\n    initPage() {\r\n        console.log(\"IndexArrangementsPage.initPage\");\r\n        $('select#typeFilter').change(function (ev) {\r\n            var selectedTypes = $(this).val() as string[];\r\n            if (selectedTypes.length == 0) {\r\n                $('.pxl-arrangement').show();\r\n            } else {\r\n                $('.pxl-arrangement').each(function() {\r\n                    var visible = false;\r\n                    for (var i = 0; !visible && i < selectedTypes.length; i++) {\r\n                        if ($(this).data('type') === selectedTypes[i]) {\r\n                            visible = true;\r\n                        }\r\n                    }\r\n                    $(this).toggle(visible);\r\n                });\r\n            }\r\n            $(this).dropdown('hide');\r\n            $('#arrangementCount').text($('.pxl-arrangement:visible').length);\r\n\r\n            if ((<any>window).ga) {\r\n                ga('send', 'event', {\r\n                    eventCategory: 'Search',\r\n                    eventAction: 'typeFilter',\r\n                    eventLabel: selectedTypes.toString(),\r\n                    transport: 'beacon'\r\n                });\r\n            }\r\n        });\r\n    }\r\n}"]}
{"version":3,"sources":["node_modules/browser-pack/_prelude.js","app/scripts/admin/main.ts","app/scripts/admin/pages/createArrangementPage.ts","app/scripts/admin/pages/createBlogPostPage.ts","app/scripts/admin/pages/createCityPage.ts","app/scripts/admin/pages/createOrEditArrangementPageBase.ts","app/scripts/admin/pages/createOrEditBlogPostPageBase.ts","app/scripts/admin/pages/createOrEditCityPageBase.ts","app/scripts/admin/pages/editArrangementPage.ts","app/scripts/admin/pages/editBlogPostPage.ts","app/scripts/admin/pages/editCityPage.ts","app/scripts/admin/utilities/constants.ts","app/scripts/admin/utilities/googleMapsUtilities.ts","app/scripts/admin/utilities/slugify.ts","app/scripts/public/main.ts","app/scripts/public/pages/guestsInvitationCardsPage.ts","app/scripts/public/pages/indexArrangementsPage.ts"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length","1","module","bootstrap","console","log","$","createCityPage_1","CreateCityPage","initPage","editCityPage","editCityPage_1","EditCityPage","data","createArrangementPage_1","CreateArrangementPage","editArrangementPage","editArrangementPage_1","EditArrangementPage","createBlogPostPage_1","CreateBlogPostPage","editBlogPostPage_1","EditBlogPostPage","document","ready","createOrEditArrangementPageBase_1","slugify_1","_createOrEditArrangem","CreateOrEditArrangementPageBase","change","val","slugify","this","toString","dropdown","CKEDITOR","replace","initMap","createOrEditBlogPostPageBase_1","_createOrEditBlogPost","CreateOrEditBlogPostPageBase","initEditor","createOrEditCityPageBase_1","_createOrEditCityPage","CreateOrEditCityPageBase","constants_1","googleMapsUtilities_1","mapElement","geocoder","google","maps","Geocoder","map","Map","zoom","center","lat","lng","placesService","places","PlacesService","initialLatitude","initialLongitude","updateMap","LatLng","click","lookupAddress","_this","getLookupAddress","geocode","address","results","status","GeocoderStatus","OK","geometry","location","updateLatLngTextboxes","name","textSearch","query","PlacesServiceStatus","getDetails","placeId","place_id","place","detailedStatus","updateInformationFromGooglePlaces","url","attr","updateImageList","updateStreetAddress","address_components","updateAddressComponent","formatted_phone_number","website","text","get","slug","setCoverImage","listElementInDom","addClass","empty","photos","removeClass","_iteratorNormalCompletion","_step","_iterator","Symbol","iterator","next","done","photo","value","append","getUrl","maxWidth","maxHeight","makeAttributionsHtmlList","html_attributions","popup","_this2","updateCoverImageUrl","currentTarget","updateCoverImageAttributions","attributions","_step2","_iterator2","_iteratorNormalCompletion2","substring","addressComponents","googleName","fieldId","GoogleMapsUtilties","getAddressComponent","streetAddress","route","streetNumber","result","marker","setPosition","Marker","position","draggable","addListener","ev","_this3","latLng","setZoom","setCenter","toLocaleString","Constants","locale","maximumFractionDigits","toolbarGroups","groups","removeButtons","latitude","longitude","componentName","addressComponent","j","types","long_name","p","RegExp","split","join","toLowerCase","c","charAt","indexOf","pages","pageClassSuffix","ctorFunc","indexArrangementsPage_1","IndexArrangementsPage","guestsInvitationCardsPage_1","GuestsInvitationCardsPage","_iteratorError","form","self","hide","modal","validateAddGuestForm","addGuest","clearAddGuestForm","event","invitationId","removeInvitation","partyId","$form","guestModel","ajax","JSON","stringify","invitation","appendAddedInvitationToList","fail","show","removeInvitationFromTable","id","guest","firstName","lastName","postalCode","postalCity","remove","selectedTypes","each","visible","toggle","window","ga","eventCategory","eventAction","eventLabel","transport"],"mappings":"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","file":"bundle.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","﻿import { CreateCityPage } from \"./pages/createCityPage\";\r\nimport { EditCityPage } from \"./pages/editCityPage\";\r\nimport { CreateArrangementPage } from \"./pages/createArrangementPage\";\r\nimport { EditArrangementPage } from \"./pages/editArrangementPage\";\r\nimport { CreateBlogPostPage } from \"./pages/createBlogPostPage\";\r\nimport { EditBlogPostPage } from \"./pages/editBlogPostPage\";\r\n\r\n$(document).ready(() => {\r\n    bootstrap();\r\n});\r\n\r\nfunction bootstrap() {\r\n    console.log(\"Starting admin bootstrapping procedure...\");\r\n\r\n    if ($(\".pxl-admin-page--cities-create\").length > 0) {\r\n        console.log(\"Found \\\"create city page\\\", start bootstrapping it...\");\r\n        let page = new CreateCityPage();\r\n        page.initPage();\r\n        console.log(\"Bootstrapping \\\"create city page\\\" finished.\");\r\n    }\r\n\r\n    let editCityPage = $(\".pxl-admin-page--cities-edit\");\r\n    if (editCityPage.length > 0) {\r\n        console.log(\"Found \\\"edit city page\\\", start bootstrapping it...\");\r\n        let page = new EditCityPage();\r\n        page.initPage(editCityPage.data(\"latitude\"), editCityPage.data(\"longitude\"));\r\n        console.log(\"Bootstrapping \\\"edit city page\\\" finished.\");\r\n    }\r\n\r\n    if ($(\".pxl-admin-page--arrangements-create\").length > 0) {\r\n        console.log(\"Found \\\"create arrangement page\\\", start bootstrapping it...\");\r\n        let page = new CreateArrangementPage();\r\n        page.initPage();\r\n        console.log(\"Bootstrapping \\\"create arrangement page\\\" finished.\");\r\n    }\r\n\r\n    let editArrangementPage = $(\".pxl-admin-page--arrangements-edit\");\r\n    if (editArrangementPage.length > 0) {\r\n        console.log(\"Found \\\"edit arrangement page\\\", start bootstrapping it...\");\r\n        let page = new EditArrangementPage();\r\n        page.initPage(editArrangementPage.data(\"latitude\"), editArrangementPage.data(\"longitude\"));\r\n        console.log(\"Bootstrapping \\\"edit arrangement page\\\" finished.\");\r\n    }\r\n\r\n    if ($(\".pxl-admin-page--blog-posts-create\").length > 0) {\r\n        console.log(\"Found \\\"create blog post page\\\", start bootstrapping it...\");\r\n        let page = new CreateBlogPostPage();\r\n        page.initPage();\r\n        console.log(\"Bootstrapping \\\"create blog post page\\\" finished.\");\r\n    }\r\n\r\n    let editBlogPostPage = $(\".pxl-admin-page--blog-posts-edit\");\r\n    if (editBlogPostPage.length > 0) {\r\n        console.log(\"Found \\\"edit blog post page\\\", start bootstrapping it...\");\r\n        let page = new EditBlogPostPage();\r\n        page.initPage();\r\n        console.log(\"Bootstrapping \\\"edit blog post page\\\" finished.\");\r\n    }\r\n\r\n    console.log(\"Bootstrapping admin procedure finished.\");\r\n}","﻿import { CreateOrEditArrangementPageBase } from \"./createOrEditArrangementPageBase\";\r\nimport { slugify } from \"../utilities/slugify\";\r\n\r\nexport class CreateArrangementPage extends CreateOrEditArrangementPageBase {\r\n    initPage() {\r\n        $(\"#Name\").change(function () {\r\n            $(\"#Slug\").val(slugify($(this).val().toString()));\r\n        });\r\n        $(\"select.dropdown\").dropdown();\r\n        CKEDITOR.replace(\"Description\");\r\n        CKEDITOR.replace(\"BookingConditions\");\r\n        CKEDITOR.replace(\"PriceInformation\");\r\n\r\n        this.initMap();\r\n    }\r\n}","﻿import { CreateOrEditBlogPostPageBase } from \"./createOrEditBlogPostPageBase\";\r\nimport { slugify } from \"../utilities/slugify\";\r\n\r\nexport class CreateBlogPostPage extends CreateOrEditBlogPostPageBase {\r\n    initPage() {\r\n        $(\"#Title\").change(function () {\r\n            $(\"#Slug\").val(slugify($(this).val().toString()));\r\n        });\r\n        this.initEditor();\r\n    }\r\n}","﻿import { CreateOrEditCityPageBase } from \"./createOrEditCityPageBase\";\r\nimport { slugify } from \"../utilities/slugify\";\r\n\r\nexport class CreateCityPage extends CreateOrEditCityPageBase {\r\n    initPage() {\r\n        console.log(\"CreateCityPage.initPage\")\r\n        $(\"#Name\").change(function () {\r\n            $(\"#Slug\").val(slugify($(this).val().toString()));\r\n        });\r\n\r\n        this.initMap();\r\n    }\r\n}","﻿import { Constants } from \"../utilities/constants\";\r\nimport { GoogleMapsUtilties } from \"../utilities/googleMapsUtilities\";\r\n\r\nexport abstract class CreateOrEditArrangementPageBase {\r\n\r\n    private mapElement: HTMLElement;\r\n\r\n    private map: google.maps.Map;\r\n    private marker: google.maps.Marker;\r\n    private geocoder: google.maps.Geocoder;\r\n    private placesService: google.maps.places.PlacesService;\r\n\r\n    protected initialLatitude: number;\r\n    protected initialLongitude: number;\r\n\r\n    protected initMap() {\r\n        this.mapElement = $(\"#map\")[0];\r\n        this.geocoder = new google.maps.Geocoder();\r\n        this.map = new google.maps.Map(this.mapElement, {\r\n            zoom: 4,\r\n            center: { lat: 63.0, lng: 17.0 }\r\n        });\r\n        this.placesService = new google.maps.places.PlacesService(this.map);\r\n\r\n        if (this.initialLatitude && this.initialLongitude) {\r\n            this.updateMap(new google.maps.LatLng(this.initialLatitude, this.initialLongitude));\r\n        }\r\n\r\n        $(\"#btnGetCoordinatesFromAddress\").click(() => {\r\n            const lookupAddress = this.getLookupAddress();\r\n            this.geocoder.geocode({ 'address': lookupAddress }, (results, status) => {\r\n                if (status === google.maps.GeocoderStatus.OK) {\r\n                    this.updateMap(results[0].geometry.location);\r\n                    this.updateLatLngTextboxes(results[0].geometry.location);\r\n                } else {\r\n                    console.log(`Kunde inte hitta position pga ${status}`);\r\n                }\r\n            });\r\n            return false;\r\n        });\r\n\r\n        $(\"#btnGetInformationFromGooglePlaces\").click(() => {\r\n            const name = $(\"#Name\").val().toString();\r\n            if (!name) return false;\r\n            this.placesService.textSearch({ query: name },\r\n                (results, status) => {\r\n                    if (status === google.maps.places.PlacesServiceStatus.OK) {\r\n                        console.log(`\"Träffar på '${name}':\"`);\r\n                        for (let i = 0; i < results.length; i++) {\r\n                            console.log(`\\t${results[i].name}`);\r\n                        }\r\n                        this.placesService.getDetails({ placeId: results[0].place_id },\r\n                            (place, detailedStatus) => {\r\n                                if (detailedStatus === google.maps.places.PlacesServiceStatus.OK) {\r\n                                    this.updateInformationFromGooglePlaces(place);\r\n                                } else {\r\n                                    console.log(`\"Kunde inte hämta detailjer för '${results[0].place_id}' pga ${detailedStatus}\"`);\r\n                                }\r\n                            });\r\n                    } else {\r\n                        console.log(`\"Inga träffar på '${name}' pga ${status}\"`);\r\n                    }\r\n                });\r\n            return false;\r\n        });\r\n\r\n        $(\"#btnOpenCoverImage\").click(() => {\r\n            var url = $(\"#CoverImage\").val().toString();\r\n            if (url) \r\n                $(\"<a>\").attr(\"href\", url).attr(\"target\", \"_blank\")[0].click();\r\n            return false;\r\n        });\r\n\r\n        $(\"#btnGetImagesFromGooglePlaces\").click(() => {\r\n            var placeId = $(\"#GooglePlacesId\").val();\r\n            if (!placeId) {\r\n                console.log(\"No Google Places id specified\")\r\n                return false;\r\n            }\r\n\r\n            this.placesService.getDetails({ placeId: placeId.toString() },\r\n                (place, detailedStatus) => {\r\n                    if (detailedStatus === google.maps.places.PlacesServiceStatus.OK) {\r\n                        this.updateImageList(place, false);\r\n                    } else {\r\n                        console.log(`\"Kunde inte hämta detailjer för '${placeId}' pga ${detailedStatus}\"`);\r\n                    }\r\n                });\r\n\r\n            return false;\r\n        });\r\n\r\n        $(\"#btnOpenWebsite\").click(() => {\r\n            $(\"<a>\").attr(\"href\", $(\"#Website\").val().toString()).attr(\"target\", \"_blank\")[0].click();\r\n            return false;\r\n        });\r\n    }\r\n\r\n    private updateInformationFromGooglePlaces(place: google.maps.places.PlaceResult): void {\r\n        $(\"#GooglePlacesId\").val(place.place_id);\r\n        this.updateImageList(place, true);\r\n        this.updateStreetAddress(place.address_components, \"StreetAddress\");\r\n        this.updateAddressComponent(place.address_components, \"postal_code\", \"PostalCode\");\r\n        this.updateAddressComponent(place.address_components, \"postal_town\", \"PostalCity\");\r\n        this.updateAddressComponent(place.address_components, \"street_address\", \"StreetAddress\");\r\n\r\n        $(\"#PhoneNumber\").val(place.formatted_phone_number);\r\n        $(\"#Website\").val(place.website.replace(/\\/+$/, \"\"));\r\n\r\n        if (place.geometry && place.geometry.location) {\r\n            this.updateLatLngTextboxes(place.geometry.location);\r\n            this.updateMap(place.geometry.location);\r\n        }\r\n\r\n        $(\"#GooglePlacesName\").text(place.name);\r\n\r\n        $.get(`/api/cities/closest?latitude=${place.geometry.location.lat()}&longitude=${place.geometry.location.lng()}`,\r\n            function (data) {\r\n                $(\"#CitySlug\").val(data.slug);\r\n            });\r\n    }\r\n\r\n    private updateImageList(place: google.maps.places.PlaceResult, setCoverImage: boolean) {\r\n        let listElementInDom = $(\"#lstImagesFromGooglePlaces\");\r\n        listElementInDom.addClass(\"hidden\");\r\n        listElementInDom.empty();\r\n\r\n        if (place.photos.length > 0) {\r\n            listElementInDom.removeClass(\"hidden\");\r\n            for (let photo of place.photos) {\r\n                listElementInDom.append(`<img \r\n                    class=\\\"ui image\\\"\r\n                    data-url=\\\"${photo.getUrl({ maxWidth: 812 })}\\\" src=\\\"${photo.getUrl({ maxWidth: 600, maxHeight: 600 })}\\\"\r\n                    data-html=\\\"${this.makeAttributionsHtmlList(photo.html_attributions)}\\\"\r\n                >`);\r\n            }\r\n            $(\"#lstImagesFromGooglePlaces .image\").popup();\r\n            $(\"#lstImagesFromGooglePlaces .image\").click((e) => {\r\n                this.updateCoverImageUrl($(e.currentTarget).data(\"url\"));\r\n                this.updateCoverImageAttributions($(e.currentTarget).data(\"html\"))\r\n                return false;\r\n            });\r\n            if (setCoverImage) {\r\n                this.updateCoverImageUrl(place.photos[0].getUrl({ maxWidth: 812 }));\r\n                this.updateCoverImageAttributions(this.makeAttributionsHtmlList(place.photos[0].html_attributions));\r\n            }\r\n        }\r\n    }\r\n\r\n    private makeAttributionsHtmlList(html_attributions: string[]): string {\r\n        let attributions = \"\";\r\n        for (let attrib of html_attributions) {\r\n            attributions += `${attrib}, `;\r\n        }\r\n        if (attributions.length >= 2)\r\n            attributions = attributions.substring(0, attributions.length - 2);\r\n        return attributions.replace(/\"/g, \"'\");\r\n    }\r\n\r\n    private updateCoverImageUrl(url: string) {\r\n        $(\"#CoverImage\").val(url);\r\n    }\r\n\r\n    private updateCoverImageAttributions(attributions: string) {\r\n        $(\"#CoverImageAttributions\").val(attributions);\r\n    }\r\n\r\n    private updateAddressComponent(addressComponents: google.maps.GeocoderAddressComponent[], googleName: string, fieldId: string): void {\r\n        const value = GoogleMapsUtilties.getAddressComponent(addressComponents, googleName);\r\n        if (value) {\r\n            $(`#${fieldId}`).val(value);\r\n        }\r\n    }\r\n\r\n    private updateStreetAddress(addressComponents: google.maps.GeocoderAddressComponent[], fieldId: string): void {\r\n        const streetAddress = GoogleMapsUtilties.getAddressComponent(addressComponents, \"street_address\");\r\n        const route = GoogleMapsUtilties.getAddressComponent(addressComponents, \"route\");\r\n        const streetNumber = GoogleMapsUtilties.getAddressComponent(addressComponents, \"street_number\");\r\n\r\n        let result = streetAddress ? streetAddress : route;\r\n        if (streetNumber)\r\n            result = result + \" \" + streetNumber;\r\n\r\n        $(`#${fieldId}`).val(result);\r\n    }\r\n\r\n    private getLookupAddress(): string {\r\n        const streetAddress = $(\"#StreetAddress\").val();\r\n        const postalCode = $(\"#PostalCode\").val();\r\n        const postalCity = $(\"#PostalCity\").val();\r\n        const lookupAddress = `${streetAddress}, ${postalCode} ${postalCity}`;\r\n        return lookupAddress;\r\n    }\r\n\r\n    private updateMap(location: google.maps.LatLng): void {\r\n        if (this.marker) {\r\n            this.marker.setPosition(location);\r\n        } else {\r\n            this.marker = new google.maps.Marker({\r\n                map: this.map,\r\n                position: location,\r\n                draggable: true\r\n            });\r\n            this.marker.addListener(\"dragend\", ev => {\r\n                this.updateLatLngTextboxes(ev.latLng);\r\n            });\r\n            this.map.setZoom(11);\r\n        }\r\n        this.map.setCenter(location);\r\n    }\r\n\r\n    private updateLatLngTextboxes(location: google.maps.LatLng): void  {\r\n        $(\"#Latitude\").val(location.lat().toLocaleString(Constants.locale, { maximumFractionDigits: 14 }));\r\n        $(\"#Longitude\").val(location.lng().toLocaleString(Constants.locale, { maximumFractionDigits: 14 }));\r\n    }\r\n}","﻿export abstract class CreateOrEditBlogPostPageBase {\r\n    protected initEditor() {\r\n        CKEDITOR.replace(\"Body\",\r\n            {\r\n                toolbarGroups: [\r\n                    { name: 'clipboard', groups: ['clipboard', 'undo'] },\r\n                    { name: 'editing', groups: ['find', 'selection', 'spellchecker', 'editing'] },\r\n                    { name: 'forms', groups: ['forms'] },\r\n                    { name: 'others', groups: ['others'] },\r\n                    { name: 'basicstyles', groups: ['basicstyles', 'cleanup'] },\r\n                    { name: 'links', groups: ['links'] },\r\n                    { name: 'paragraph', groups: ['list', 'indent', 'blocks', 'align', 'bidi', 'paragraph'] },\r\n                    { name: 'insert', groups: ['insert'] },\r\n                    { name: 'styles', groups: ['styles'] },\r\n                    { name: 'colors', groups: ['colors'] },\r\n                    { name: 'about', groups: ['about'] },\r\n                    { name: 'document', groups: ['mode', 'document', 'doctools'] },\r\n                    { name: 'tools', groups: ['tools'] }\r\n                ],\r\n                removeButtons: 'Subscript,Superscript,About,Outdent,Blockquote,RemoveFormat,Strike,Image,SpecialChar,Anchor,Scayt,Undo,Redo,HorizontalRule,Indent,Styles,Cut,Copy,Paste,PasteText,PasteFromWord,Table'\r\n            }\r\n        );\r\n    }\r\n}","﻿import { Constants } from \"../utilities/constants\";\r\n\r\nexport abstract class CreateOrEditCityPageBase {\r\n\r\n    private mapElement: HTMLElement;\r\n\r\n    private map: google.maps.Map;\r\n    private marker: google.maps.Marker;\r\n    private geocoder: google.maps.Geocoder;\r\n\r\n    protected initialLatitude: number;\r\n    protected initialLongitude: number;\r\n\r\n    protected initMap() {\r\n        this.mapElement = $(\"#map\")[0];\r\n        this.geocoder = new google.maps.Geocoder();\r\n        this.map = new google.maps.Map(this.mapElement, {\r\n            zoom: 4,\r\n            center: { lat: 63.0, lng: 17.0 }\r\n        });\r\n\r\n        if (this.initialLatitude && this.initialLongitude) {\r\n            this.updateMap(new google.maps.LatLng(this.initialLatitude, this.initialLongitude));\r\n        }\r\n\r\n        $(\"#btnGetCoordinatesFromName\").click(() => {\r\n            const lookupAddress = this.getLookupAddress();\r\n            this.geocoder.geocode({ 'address': lookupAddress }, (results, status) => {\r\n                if (status === google.maps.GeocoderStatus.OK) {\r\n                    this.updateMap(results[0].geometry.location);\r\n                    this.updateLatLngTextboxes(results[0].geometry.location);\r\n                } else {\r\n                    console.log(`Kunde inte hitta position pga ${status}`);\r\n                }\r\n            });\r\n            return false;\r\n        });\r\n    }\r\n\r\n    private getLookupAddress(): string {\r\n        return $(\"#Name\").val().toString();\r\n    }\r\n\r\n    private updateMap(location: google.maps.LatLng): void {\r\n        if (this.marker) {\r\n            this.marker.setPosition(location);\r\n        } else {\r\n            this.marker = new google.maps.Marker({\r\n                map: this.map,\r\n                position: location,\r\n                draggable: true\r\n            });\r\n            this.marker.addListener(\"dragend\", ev => {\r\n                this.updateLatLngTextboxes(ev.latLng);\r\n            });\r\n            this.map.setZoom(11);\r\n        }\r\n        this.map.setCenter(location);\r\n    }\r\n\r\n    private updateLatLngTextboxes(location: google.maps.LatLng): void  {\r\n        $(\"#Latitude\").val(location.lat().toLocaleString(Constants.locale, { maximumFractionDigits: 14 }));\r\n        $(\"#Longitude\").val(location.lng().toLocaleString(Constants.locale, { maximumFractionDigits: 14 }));\r\n    }\r\n}","﻿import { CreateOrEditArrangementPageBase } from \"./createOrEditArrangementPageBase\";\r\nimport { slugify } from \"../utilities/slugify\";\r\n\r\nexport class EditArrangementPage extends CreateOrEditArrangementPageBase {\r\n    initPage(latitude: number, longitude: number) {\r\n        $(\"select.dropdown\").dropdown();\r\n        CKEDITOR.replace(\"Description\");\r\n        CKEDITOR.replace(\"BookingConditions\");\r\n        CKEDITOR.replace(\"PriceInformation\");\r\n        this.initialLatitude = latitude;\r\n        this.initialLongitude = longitude;\r\n        this.initMap();\r\n    }\r\n}","﻿import { CreateOrEditBlogPostPageBase } from \"./createOrEditBlogPostPageBase\";\r\nexport class EditBlogPostPage extends CreateOrEditBlogPostPageBase {\r\n    initPage() {\r\n        this.initEditor();\r\n    }\r\n}","﻿import { CreateOrEditCityPageBase } from \"./createOrEditCityPageBase\";\r\nimport { slugify } from \"../utilities/slugify\";\r\n\r\nexport class EditCityPage extends CreateOrEditCityPageBase {\r\n    initPage(latitude: number, longitude: number) {\r\n        console.log(\"EditCityPage.initPage\", latitude, longitude)\r\n        this.initialLatitude = latitude;\r\n        this.initialLongitude = longitude;\r\n        this.initMap();\r\n    }\r\n}","﻿export class Constants {\r\n    static locale = \"sv\";\r\n}","﻿export class GoogleMapsUtilties {\r\n    static getAddressComponent(addressComponents: google.maps.GeocoderAddressComponent[], componentName: string): string {\r\n        for (let i = 0; i < addressComponents.length; i++) {\r\n            const addressComponent = addressComponents[i];\r\n            for (let j = 0; j < addressComponent.types.length; j++) {\r\n                if (addressComponent.types[j] === componentName) {\r\n                    return addressComponent.long_name;\r\n                }\r\n            }\r\n        }\r\n        return undefined;\r\n    }\r\n}","﻿// https://gist.github.com/mathewbyrne/1280286\r\n\r\nexport function slugify(text: string) {\r\n    const a = \"àáåäâèéëêìíïîòóöôùúüûñçßÿœæŕśńṕẃǵǹḿǘẍźḧ·/_,:;\";\r\n    const b = \"aaaaaeeeeiiiioooouuuuncsyoarsnpwgnmuxzh------\";\r\n    const p = new RegExp(a.split(\"\").join(\"|\"), \"g\");\r\n\r\n    return text.toString().toLowerCase()\r\n        .replace(/\\s+/g, \"-\") // Replace spaces with -\r\n        .replace(p,\r\n            c =>\r\n            b.charAt(a.indexOf(c))) // Replace special chars\r\n        .replace(/&/g, \"-and-\")     // Replace & with 'and'\r\n        .replace(/[^\\w\\-]+/g, \"\")   // Remove all non-word chars\r\n        .replace(/\\-\\-+/g, \"-\")     // Replace multiple - with single -\r\n        .replace(/^-+/, \"\")         // Trim - from start of text\r\n        .replace(/-+$/, \"\");        // Trim - from end of text\r\n}","﻿import { IndexArrangementsPage } from \"./pages/indexArrangementsPage\";\r\nimport { DetailsArrangementPage } from \"./pages/detailsArrangementPage\";\r\nimport { GuestsInvitationCardsPage } from \"./pages/guestsInvitationCardsPage\";\r\n\r\n$(document).ready(() => {\r\n    bootstrap();\r\n});\r\n\r\nfunction bootstrap() {\r\n    var pages = [\r\n        { pageClassSuffix: \"arrangements-index\", ctorFunc: () => new IndexArrangementsPage() },\r\n        { pageClassSuffix: \"arrangements-details\", ctorFunc: () => new IndexArrangementsPage() },\r\n        { pageClassSuffix: \"invitation-cards-guests\", ctorFunc: () => new GuestsInvitationCardsPage() }\r\n    ];\r\n\r\n    for (let p of pages) {\r\n        if ($(`.pxl-public-page--${p.pageClassSuffix}`).length > 0) {\r\n            p.ctorFunc().initPage();\r\n        }\r\n    }\r\n}","﻿interface GuestModel {\r\n    firstName: string;\r\n    lastName: string;\r\n    streetAddress: string;\r\n    postalCode: string;\r\n    postalCity: string;\r\n}\r\n\r\ninterface InvitationModel {\r\n    id: string;\r\n    guest: GuestModel;\r\n}\r\n\r\nexport class GuestsInvitationCardsPage {\r\n    initPage() {\r\n        $('.ui.form')\r\n            .form({\r\n                fields: {\r\n                    FirstName: 'empty',\r\n                    LastName: 'empty',\r\n                    StreetAddress: 'empty',\r\n                    PostalCode: 'regExp[/^\\\\d{3}\\\\s?\\\\d{2}$/]',\r\n                    PostalCity: 'empty'\r\n                }\r\n            });\r\n\r\n        $('#addGuestButton').click(() => {\r\n            var self = this;\r\n            $('#removeErrorMessage').hide();\r\n            $('.ui.modal')\r\n                .modal({\r\n                    onApprove: function () {\r\n                        if (self.validateAddGuestForm()) {\r\n                            self.addGuest($('.ui.modal').data('party-id'));\r\n                        }\r\n                        return false;\r\n                    },\r\n                    onDeny: function () {\r\n                        self.clearAddGuestForm();\r\n                    }\r\n                })\r\n                .modal('show')\r\n        });\r\n\r\n        $('[data-remove-invitation-button]').click(event => {\r\n            let invitationId = $(event.currentTarget).data('invitation-id');\r\n            this.removeInvitation(invitationId);\r\n        });\r\n    }\r\n\r\n\r\n    private validateAddGuestForm(): boolean {\r\n        if ($('.ui.form').form('is valid')) {\r\n            return true;\r\n        } else {\r\n            $('.ui.form').form('validate form');\r\n            return false;\r\n        }\r\n    }\r\n\r\n    private addGuest(partyId: string): void {\r\n        let $form = $(\".ui.form\");\r\n        let guestModel = {\r\n            partyId: partyId,\r\n            firstName: $(\"input[name='FirstName']\", $form).val().toString(),\r\n            lastName: $(\"input[name='LastName']\", $form).val().toString(),\r\n            streetAddress: $(\"input[name='StreetAddress']\", $form).val().toString(),\r\n            postalCode: $(\"input[name='PostalCode']\", $form).val().toString(),\r\n            postalCity: $(\"input[name='PostalCity']\", $form).val().toString()\r\n        };\r\n\r\n        $(\".ui.modal .ui.error.message\").hide();\r\n        $.ajax({\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            },\r\n            'type': 'POST',\r\n            'url': \"/api/invitationcards/add-guest-and-invitation\",\r\n            'data': JSON.stringify(guestModel),\r\n            'dataType': 'json',\r\n        })\r\n            .done(data => {\r\n                let invitation = {\r\n                    id: data,\r\n                    guest: guestModel\r\n                };\r\n                this.appendAddedInvitationToList(invitation);\r\n                this.clearAddGuestForm();\r\n            })\r\n            .fail(() => {\r\n                $(\".ui.modal .ui.error.message\").show();\r\n            });\r\n    }\r\n\r\n    private removeInvitation(invitationId: string): void {\r\n        $('#removeErrorMessage').hide();\r\n        $.ajax({\r\n                'type': 'DELETE',\r\n                'url': '/api/invitationcards/remove-guest-and-invitation/' + invitationId,\r\n            })\r\n            .done(data => {\r\n                this.removeInvitationFromTable(invitationId);\r\n            })\r\n            .fail(() => {\r\n                $('#removeErrorMessage').show();\r\n            });\r\n    }\r\n\r\n\r\n    private appendAddedInvitationToList(invitation: InvitationModel): void {\r\n        $('[data-invitations-list]').append(`\r\n            <div class=\"item\" data-invitation-id='${invitation.id}'>\r\n                <div class=\"right floated content\">\r\n                    <a data-remove-invitation-button data-invitation-id=\"${invitation.id}\"><i class=\"large remove icon\"></i></a>\r\n                </div>\r\n                <div class=\"content\">\r\n                    <div class=\"header\">${invitation.guest.firstName} ${invitation.guest.lastName}</div>\r\n                    <div class=\"description\">${invitation.guest.streetAddress}, ${invitation.guest.postalCode} ${invitation.guest.postalCity}</div>\r\n                </div>\r\n            </div>\r\n        `);\r\n        $(`[data-remove-invitation-button][data-invitation-id=\"${invitation.id}\"]`).click(event => {\r\n            let invitationId = $(event.currentTarget).data('invitation-id');\r\n            this.removeInvitation(invitationId);\r\n        });\r\n    }\r\n\r\n    private removeInvitationFromTable(invitationId: string): void {\r\n        $('[data-invitations-list] .item[data-invitation-id=\"' + invitationId + '\"]').remove();\r\n    }\r\n\r\n    private clearAddGuestForm(): void {\r\n        let $form = $(\".ui.form\");\r\n        $(\"input[type='text']\", $form).val(\"\");\r\n        $(\".ui.modal .ui.error.message\").hide();\r\n    }\r\n}","﻿export class IndexArrangementsPage {\r\n    initPage() {\r\n        console.log(\"IndexArrangementsPage.initPage\");\r\n        $('select#typeFilter').change(function (ev) {\r\n            var selectedTypes = $(this).val() as string[];\r\n            if (selectedTypes.length == 0) {\r\n                $('.pxl-arrangement').show();\r\n            } else {\r\n                $('.pxl-arrangement').each(function() {\r\n                    var visible = false;\r\n                    for (var i = 0; !visible && i < selectedTypes.length; i++) {\r\n                        if ($(this).data('type') === selectedTypes[i]) {\r\n                            visible = true;\r\n                        }\r\n                    }\r\n                    $(this).toggle(visible);\r\n                });\r\n            }\r\n            $(this).dropdown('hide');\r\n            $('#arrangementCount').text($('.pxl-arrangement:visible').length);\r\n\r\n            if ((<any>window).ga) {\r\n                ga('send', 'event', {\r\n                    eventCategory: 'Search',\r\n                    eventAction: 'typeFilter',\r\n                    eventLabel: selectedTypes.toString(),\r\n                    transport: 'beacon'\r\n                });\r\n            }\r\n        });\r\n    }\r\n}"]}